openapi: 3.0.0
info:
  title: pypyr scheduler
  version: '1.0'
  contact:
    url: 'https://github.com/dzerrenner'
    email: dazer017@gmail.com
    name: David Zerrenner
  license:
    name: MIT
    url: 'https://choosealicense.com/licenses/mit/'
  description: >
    Pypyr-Scheduler API spec.
    `TODO:` More header information.
servers:
  - url: 'http://localhost:8080'
    description: local-dev
paths:
  /status:
    get:
      operationId: pyrsched.api.status.get
      summary: >
        Get some status information about the
        scheduler.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_running:
                    type: boolean
                required:
                  - is_running
              example:
                is_running: false
      description: >
        Returns some status information for the
        scheduler
      tags:
        - Operations
  /pipelines:
    get:
      summary: List all known pipelines
      tags:
        - Pipelines
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pipeline'
              example:
                - filename: test_pipeline_1.yaml
                - filename: test_pipeline_2.yaml
                - filename: test_pipeline_3.yaml
      operationId: pyrsched.api.pipelines.get_all
      description: Get pipeline descriptions.


components:
  schemas:
    Job:
      title: Job
      type: object
      properties:
        version:
          type: integer
        id:
          type: string
        func:
          type: string
        trigger:
          type: object
          properties:
            version:
              type: integer
            timezone:
              type: string
            start_date:
              type: string
            end_date:
              type: string
            interval:
              type: string
            jitter:
              type: string
        executor:
          type: string
        args:
          type: array
          items:
            type: string
        kwargs:
          type: object
        name:
          type: string
        misfire_grace_time:
          type: integer
        coalesce:
          type: string
        max_instances:
          type: integer
        next_run_time:
          type: string
      required:
        - version
        - id
        - func
        - trigger
        - executor
        - args
        - kwargs
        - name
    Pipeline:
      title: Pipeline
      type: object
      properties:
        filename:
          type: string
          # format: string
      example:
        filename: test_pipeline_3.yaml
  securitySchemes:
    token-header:
      name: X-VPN-ZUGD-AUTH-TOKEN
      type: apiKey
      in: header
      description: API-Key as Header
    token-query:
      name: token
      type: apiKey
      in: query
      description: API-Key as query param
