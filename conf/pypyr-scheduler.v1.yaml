openapi: 3.0.0
info:
  title: pypyr scheduler
  version: '1.0'
  contact:
    url: 'https://github.com/dzerrenner'
    email: dazer017@gmail.com
    name: David Zerrenner
  license:
    name: MIT
    url: 'https://choosealicense.com/licenses/mit/'
  description: >
    Pypyr-Scheduler API spec.
    `TODO:` More header information.
servers:
  - url: 'http://localhost:8080'
    description: local-dev
paths:
  /status:
    get:
      operationId: pyrsched.api.status.get
      summary: >
        Get some status information about the
        scheduler.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_running:
                    type: boolean
                required:
                  - is_running
              example:
                is_running: false
      description: >
        Returns some status information for the
        scheduler
      tags:
        - Operations
  /pipelines:
    get:
      summary: List all known pipelines
      tags:
        - Pipelines
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pipeline'
              example:
                - filename: test_pipeline_1.yaml
                - filename: test_pipeline_2.yaml
                - filename: test_pipeline_3.yaml
      operationId: pyrsched.api.pipelines.get_all
      description: Get pipeline descriptions.
  '/pipelines/{filename}':
    get:
      summary: Download a pipeline file
      tags:
        - Pipelines
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '404':
          description: Pipeline not found  
      operationId: pyrsched.api.pipelines.get_one
      description: Download a single pipeline file.
      parameters:
        - schema:
            type: string
          name: filename
          in: path
          required: true
    post:
      summary: Upload a new pipeline
      operationId: pyrsched.api.pipelines.create
      tags:
        - Pipelines
      responses:
        '201':
          description: OK, Pipeline was uploaded
        '406':
          description: Not Acceptable, possible malicious content detected
      parameters:
        - schema:
            type: string
          name: filename
          in: path
          required: true
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
    put:
      summary: Change a pipeline file
      operationId: pyrsched.api.pipelines.update
      tags:
        - Pipelines
      responses:
        '204':
          description: OK, Pipeline was updated, no return content
        '404': 
          description: Pipeline not found       
        '406':
          description: Not Acceptable, possible malicious content detected             
      parameters:
        - schema:
            type: string
          name: filename
          in: path
          required: true
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary          
    delete:
      summary: Delete a pipeline file
      operationId: pyrsched.api.pipelines.delete
      tags:
        - Pipelines
      responses:
        '204':
          description: OK, Pipeline was deleted, no return content
        '404': 
          description: Pipeline not found
        '406':
          description: Not Acceptable, possible malicious content detected          
      parameters:
        - schema:
            type: string
          name: filename
          in: path
          required: true          
  /jobs:
    get:
      summary: List all jobs
      operationId: pyrsched.api.jobs.get_all
      tags: 
        - "Job management"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
      description: Retrieve a list of all known Jobs
  '/jobs/{pipeline-name}/{interval}':
    post:
      summary: Create a new job
      operationId: pyrsched.api.jobs.create
      tags:
        - "Job management"
      responses:
        '201':
          description: Job created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'                
          links:
            GetJobById:
              operationId: pyrsched.api.jobs.get
              parameters:
                job-id: '$response.body#/id'
              description: >
                The `id` value in the `Job` returned by this operation 
                can be used as the `job-id` parameter in `GET /jobs/{job-id}`.
        '404':
          description: Pipeline not found
        '400':
          description: Interval must be greater than 0
      parameters:
        - schema:
            type: string
          name: pipeline-name
          in: path
          required: true          
        - schema:
            type: integer
          name: interval
          in: path
          required: true            
  '/jobs/{job-identifier}':
    parameters:
      - schema:
          type: string
        name: job-identifier
        in: path
        required: true
        description: >
          The `job-identifier` is used to find a job in the list
          of known jobs. You can use a `job-id` (uuid) or the job's `name`.        
    get:
      summary: Get a single job by its ID or name
      tags: 
        - "Job management"
      operationId: pyrsched.api.jobs.get_one
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
    delete:
      summary: Remove a job 
      operationId: pyrsched.api.jobs.delete
      tags:
        - "Job management"
      responses:
        '200':
          description: OK
        '404':
          description: Job not Found
        '204':
          description: OK, Job was deleted, no return content
  '/jobs/{job-identifier}/{pipeline-name}/{interval}':        
    put:
      summary: Change a job 
      operationId: pyrsched.api.jobs.change
      parameters:
        - name: job-identifier
          schema:
            type: string          
          in: path      
          required: true
        - name: pipeline-name
          schema:
            type: string          
          in: path      
          required: true
        - name: interval
          schema:
            type: integer          
          in: path      
          required: true                    
      tags:
        - "Job management"
      responses:
        '200':
          description: OK
        '404':
          description: Not Found                    
  '/jobs/{job-identifier}/execution':
    parameters:
      - schema:
          type: string
        name: job-identifier
        in: path
        required: true
        description: >
          The `job-identifier` is used to find a job in the list
          of known jobs. You can use a `job-id` (uuid) or the job's `name`.
    get:
      summary: Job status check
      operationId: pyrsched.api.scheduler.status
      tags: 
        - "Job execution"
      responses:
        '200':
          description: OK
        '404':
          description: Job not Found            
    post:
      summary: Start job or resume paused job
      operationId: pyrsched.api.scheduler.start
      tags:
        - "Job execution"
      responses:
        '201':
          description: OK, execution created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Job not Found                                         
    delete:
      summary: Stop job execution (pause)
      operationId: pyrsched.api.scheduler.pause
      tags: 
        - "Job execution"
      responses:
        '200':
          description: OK
        '404':
          description: Job not Found                      


components:
  schemas:
    Job:
      title: Job
      type: object
      properties:
        version:
          type: integer
        id:
          type: string
        func:
          type: string
        trigger:
          type: object
          properties:
            version:
              type: integer
            timezone:
              type: string
            start_date:
              type: string
            end_date:
              type: string
            interval:
              type: string
            jitter:
              type: string
        executor:
          type: string
        args:
          type: array
          items:
            type: string
        kwargs:
          type: object
        name:
          type: string
        misfire_grace_time:
          type: integer
        coalesce:
          type: string
        max_instances:
          type: integer
        next_run_time:
          type: string
      required:
        - version
        - id
        - func
        - trigger
        - executor
        - args
        - kwargs
        - name
    Pipeline:
      title: Pipeline
      type: object
      properties:
        filename:
          type: string
          # format: string
      example:
        filename: test_pipeline_3.yaml
  securitySchemes:
    token-header:
      name: X-VPN-ZUGD-AUTH-TOKEN
      type: apiKey
      in: header
      description: API-Key as Header
    token-query:
      name: token
      type: apiKey
      in: query
      description: API-Key as query param
